openapi: 3.0.3
info:
  title: Ð¡ATS API
  version: 1.0.0
  description: Cats restapi
paths:
  /auth/token:
    post:
      operationId: auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/token/refresh:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /cats/:
    get:
      operationId: cats_list
      tags:
      - cats
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cat'
          description: ''
    post:
      operationId: cats_create
      tags:
      - cats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cat'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: ''
  /cats/{id}/:
    get:
      operationId: cats_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cats
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: ''
    put:
      operationId: cats_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cat'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: ''
    patch:
      operationId: cats_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCat'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: ''
    delete:
      operationId: cats_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - cats
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Cat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          maxLength: 500
        age:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Age in full months
        color:
          type: string
          maxLength: 100
        user:
          type: integer
        breed:
          type: integer
      required:
      - age
      - breed
      - color
      - description
      - id
      - user
    PatchedCat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          maxLength: 500
        age:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Age in full months
        color:
          type: string
          maxLength: 100
        user:
          type: integer
        breed:
          type: integer
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
